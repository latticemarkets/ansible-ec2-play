# Clones and builds the application on the server
# Assumes a working Play deployment (via pvm: https://github.com/kaiinkinen/pvm) and Git are available
# WARNING: if your server has low memory (like a Micro EC2 instance) the build step may fail due to the OOM manager killing it. Enable swap or add more memory to the server.
# Run with: ansible-playbook -i hosts.ini deploy.yaml -u ubuntu
---
- hosts: ec2Instance
  vars:
  - ubuntu_release: quantal
  - user: ubuntu
  - group: ubuntu
  - home: /home/ubuntu
  - repo_url: git@github.com:latticemarkets/simulation.git
  - repo_remote: origin
  - repo_version: feature/deploy
  - dest: /home/ubuntu/simulation
  - aws_key: /home/ubuntu/.ssh/id_rsa
  - port: 80

  tasks:
   - name: Remove old checkouts
     action: file path={{ dest }} state=absent

   - name: Checkout project from Git
     action: git repo={{ repo_url }} dest={{ dest }} remote={{ repo_remote }} version={{ repo_version }} force=yes recursive=no accept_hostkey=yes key_file={{ aws_key }}

   # We ignore errors as there may be no running Java process
   - name: Kill old processes to free ports and memory and so we can redeploy
     action: command killall java -q
     ignore_errors: yes

   # Launch project (asynchronously with fire-and-forget behaviour)
   - name: Launch project
     # action: shell {{ dest }}/activator stage -Dhttp.port={{ port }} -J-server -J-Xms4096M -J-Xmx4096m >> /var/log/playframework/application.log
     action: shell {{ dest }}/activator stage -Dhttp.port={{ port }} -J-server -J-Xms4096M -J-Xmx4096m
     async: 10
     poll: 0
